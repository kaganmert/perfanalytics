version: '3'

services:
  
  frontend:
    build: dashboard/.
    hostname: frontend
    container_name: frontend
    restart: always
    depends_on:
      - backend
      - mongodb
    ports:
      - 127.0.0.1:3000:3000

  backend:
    build: api/.
    hostname: backend
    container_name: backend
    restart: always
    depends_on:
      - mongodb
    ports:
      - 127.0.0.1:8000:8000

  mongodb:
    image: mongo
    hostname: database
    container_name: database
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_ROOT_USERNAME}" 
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_ROOT_PASSWORD}"
    volumes:
      - mongodb:/data/db

  website:
    image: nginx
    hostname: website
    container_name: website 
    restart: always
    ports:
      - 8080:80
    volumes:
      - ./website:/usr/share/nginx/html/

  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx-proxy-manager 
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
      - '81:81'
    environment:
      DB_MYSQL_HOST: "nginx-proxy-manager-db"
      DB_MYSQL_PORT: "${NGINX_PROXY_MANAGER_MYSQL_PORT}"
      DB_MYSQL_USER: "${NGINX_PROXY_MANAGER_MYSQL_USERNAME}"
      DB_MYSQL_PASSWORD: "${NGINX_PROXY_MANAGER_MYSQL_PASSWORD}"
      DB_MYSQL_NAME: "${NGINX_PROXY_MANAGER_MYSQL_DB}"
    volumes:
      - npm-data:/data
      - npm-letsencrypt:/etc/letsencrypt
    depends_on:
      - nginx-proxy-manager-db
  
  nginx-proxy-manager-db:
    image: 'jc21/mariadb-aria:latest'
    container_name: nginx-proxy-manager-db 
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "${NGINX_PROXY_MANAGER_MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${NGINX_PROXY_MANAGER_MYSQL_DB}"
      MYSQL_USER: "${NGINX_PROXY_MANAGER_MYSQL_USERNAME}"
      MYSQL_PASSWORD: "${NGINX_PROXY_MANAGER_MYSQL_PASSWORD}"
    volumes:
      - npm-mysql:/var/lib/mysql

volumes:
  mongodb:
  npm-data:
  npm-letsencrypt:
  npm-mysql:


